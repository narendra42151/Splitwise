name: Flutter CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  tests:
    name: Run Unit & Widget Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.2"
          channel: "stable"

      - name: Run Unit Tests
        run: flutter test test/ || echo "No unit tests found" # Replace with your test directory

      - name: Run Widget Tests
        run: flutter test test/widget_test.dart || echo "Widget tests not found"

  android_instrumentation_tests:
    name: Android Integration Tests
    runs-on: ubuntu-latest
    needs: [tests] # Depends on unit/widget tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.2"
          channel: "stable"

      - name: Run Integration Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: |
            flutter devices
            adb shell input keyevent 82
            if [ -f "integration_test/app_test.dart" ]; then
              flutter drive --driver=test_driver/integration_test.dart --target=integration_test/app_test.dart
            else
              echo "No integration tests found"
            fi

  packaging:
    name: Build and Package
    runs-on: ubuntu-latest
    needs: [tests, android_instrumentation_tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.2"

      - name: Build APK
        run: flutter build apk --release

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
